(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";function renderMap(t){topojson.feature(t,t.objects.subunits);mapSvg.selectAll(".subunit").data(topojson.feature(t,t.objects.subunits).features).enter().append("path").attr("class",function(t){return"subunit "+t.id}).attr("d",path),mapSvg.append("path").datum(topojson.feature(t,t.objects.places)).attr("d",path).attr("class","place"),mapSvg.selectAll(".place-label").data(topojson.feature(t,t.objects.places).features).enter().append("text").attr("class","place-label").attr("transform",function(t){return"translate("+projection(t.geometry.coordinates)+")"}).attr("dy",".35em").attr("x",function(t){return t.geometry.coordinates[0]>-22?6:-6}).style("text-anchor",function(t){return t.geometry.coordinates[0]>-22?"start":"end"}).text(function(t){return t.properties.name}),mapSvg.selectAll(".subunit-label").data(topojson.feature(t,t.objects.subunits).features).enter().append("text").attr("class",function(t){return"subunit-label "+t.id}).attr("transform",function(t){return"translate("+path.centroid(t)+")"}).attr("dy",".35em").text(function(t){return t.properties.name})}function renderQuakesMap(t){var e=(buildXScale(t,WIDTH,20),buildYScale(t,HEIGHT,20),d3.scaleLinear([0,d3.max(t,function(t){return t.size})]).range([0,10]));mapSvg.selectAll("circle").data(t).enter().append("circle").attr("class","quake-location fade-in").attr("transform",function(t){return"translate("+projection([t.longitude,t.latitude])+")"}).attr("r",function(t){return e(t.size)}).attr("fill",function(t){return"rgb("+120*t.size+",0,0)"}),mapSvg.selectAll("text").data(t).enter().append("text").text(function(t){return t.size>.75?t.humanReadableLocation:null}).attr("transform",function(t){return"translate("+projection([t.longitude,t.latitude])+")"}).attr("font-family","sans-serif").attr("font-size","12px")}function getJson(t){return new Promise(function(e,n){return d3.json(t,e)})}function buildXScale(t,e,n){return d3.scaleLinear([d3.min(t,function(t){return t.longitude}),d3.max(t,function(t){return t.longitude})]).range([n,e-n])}function buildYScale(t,e,n){return d3.scaleLinear([d3.min(t,function(t){return t.latitude}),d3.max(t,function(t){return t.latitude})]).range([e-n,n])}var WIDTH=document.querySelector(".map-container").offsetWidth,HEIGHT=.7*WIDTH,SCATTER_PADDING=20;getJson("./iceland.json").then(renderMap),getJson("https://apis.is/earthquake/is").then(function(t){return t.results}).then(function(t){return t.filter(function(t){return t.size>=0})}).then(renderQuakesMap);var mapSvg=d3.select(".map-container").append("svg").attr("class","map-svg").attr("width",WIDTH).attr("height",HEIGHT),projection=d3.geoOrthographic().center([0,0]).rotate([19,-65]).scale(8e3).translate([WIDTH/2,HEIGHT/2]),path=d3.geoPath().projection(projection);

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
